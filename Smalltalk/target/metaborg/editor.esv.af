Module(
  "editor"
, Imports([Import("Syntax"), Import("Analysis")])
, [ Language(
      ""
    , [Extensions(Values(["st"])), SemanticProvider("target/metaborg/stratego.ctree"), SemanticProvider("target/metaborg/stratego-javastrat.jar")]
    )
  , Language(
      ""
    , [ Table("target/metaborg/sdf.tbl")
      , StartSymbols([Sort("Prog")])
      , LineCommentPrefix(String("\"//\""))
      , BlockCommentDefs(BlockCommentDef(String("\"/*\""), "*", String("\"*/\"")))
      , FenceDefs(
          [FenceDef("[", "]"), FenceDef("(", ")"), FenceDef("{", "}")]
        )
      ]
    )
  , Menus(
      [ ToolbarMenu(
          Label(String("\"Syntax\""))
        , [OpenEditor()]
        , [ Action(String("\"Format\""), Strategy("editor-format"), [Source()])
          , Action(String("\"Show parsed AST\""), Strategy("debug-show-aterm"), [Source()])
          ]
        )
      ]
    )
  , Views(
      [OutlineView(Strategy("editor-outline"), [Source()], Some(ExpandToLevel("3")))]
    )
  , Colorer(
      " "
    , [ ColorRule(
          Token(TK_KEYWORD())
        , Attribute(ColorRGB("127", "0", "85"), NoColor(), BOLD())
        )
      , ColorRule(Token(TK_IDENTIFIER()), Attribute(ColorDefault(), NoColor(), NORMAL()))
      , ColorRule(
          Token(TK_STRING())
        , Attribute(ColorRGB("0", "0", "255"), NoColor(), NORMAL())
        )
      , ColorRule(
          Token(TK_NUMBER())
        , Attribute(ColorRGB("0", "128", "0"), NoColor(), NORMAL())
        )
      , ColorRule(
          Token(TK_VAR())
        , Attribute(ColorRGB("139", "69", "19"), NoColor(), ITALIC())
        )
      , ColorRule(
          Token(TK_OPERATOR())
        , Attribute(ColorRGB("0", "0", "128"), NoColor(), NORMAL())
        )
      , ColorRule(
          Token(TK_LAYOUT())
        , Attribute(ColorRGB("63", "127", "95"), NoColor(), ITALIC())
        )
      ]
    )
  , Colorer(
      ""
    , [ ColorDef(
          "darkred"
        , Attribute(ColorRGB("128", "0", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "red"
        , Attribute(ColorRGB("255", "0", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "darkgreen"
        , Attribute(ColorRGB("0", "128", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "green"
        , Attribute(ColorRGB("0", "255", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "darkblue"
        , Attribute(ColorRGB("0", "0", "128"), NoColor(), NORMAL())
        )
      , ColorDef(
          "blue"
        , Attribute(ColorRGB("0", "0", "255"), NoColor(), NORMAL())
        )
      , ColorDef(
          "cyan"
        , Attribute(ColorRGB("0", "255", "255"), NoColor(), NORMAL())
        )
      , ColorDef(
          "magenta"
        , Attribute(ColorRGB("255", "0", "255"), NoColor(), NORMAL())
        )
      , ColorDef(
          "yellow"
        , Attribute(ColorRGB("255", "255", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "white"
        , Attribute(ColorRGB("255", "255", "255"), NoColor(), NORMAL())
        )
      , ColorDef(
          "black"
        , Attribute(ColorRGB("0", "0", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "gray"
        , Attribute(ColorRGB("128", "128", "128"), NoColor(), NORMAL())
        )
      , ColorDef(
          "grey"
        , Attribute(ColorRGB("128", "128", "128"), NoColor(), NORMAL())
        )
      , ColorDef(
          "orange"
        , Attribute(ColorRGB("255", "165", "0"), NoColor(), NORMAL())
        )
      , ColorDef(
          "pink"
        , Attribute(ColorRGB("255", "105", "180"), NoColor(), NORMAL())
        )
      , ColorDef(
          "brown"
        , Attribute(ColorRGB("139", "69", "19"), NoColor(), NORMAL())
        )
      , ColorDef("default", Attribute(ColorDefault(), NoColor(), NORMAL()))
      ]
    )
  , Colorer(
      ""
    , [ ColorRule(ConstructorOnly(Constructor("Prog-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Start-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("PsuedoVariableReference-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Identifier-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinarySelectorChar-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMessageSelector-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ObjectArrayLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("NestedObjectArrayLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("SymbolInArrayLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("LiteralArrayElement-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ByteArrayLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("UnsignedIntegerLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("FormalBlockArgumentDeclaration-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("FormalBlockArgumentDeclarationList-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("FormalBlockArgumentDeclarationListWithSep-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ConstantReference-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("IntegerLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ScaledDecimalLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("FloatingPointLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("CharacterLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("StringLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("SymbolLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ArrayLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BlockLiteral-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Literal-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Reference-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("NestedExpression-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinaryMessageOperand-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMessageArgument-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMessageSegment-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinaryMessage-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("UnaryMessage-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("UnaryMessageChain-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinaryMessageChain-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMessage-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Operand-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("MessageChain-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("CascadedMessage-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("AssignmentOperation-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Expression-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("MethodReturnOperator-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("LocalVariableDeclarationList-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ExecutableCodeRest-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("FinalStatement-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("DottedStatement-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Statement-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Dot-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("UnaryMessageSelector-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinaryMessageSelector-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("Keyword-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BindableIdentifier-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMethodHeaderSegment-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("UnaryMethodHeader-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("BinaryMethodHeader-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("KeywordMethodHeader-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("MethodDeclaration-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("MethodHeader-Plhdr")), AttributeRef("gray"))
      , ColorRule(ConstructorOnly(Constructor("ExecutableCode-Plhdr")), AttributeRef("gray"))
      ]
    )
  , Colorer("", [])
  , Language("", [SemanticObserver(Strategy("editor-analyze"), [Constraint()])])
  , Menus(
      [ ToolbarMenu(
          Label(String("\"Analysis\""))
        , []
        , [ Action(
              String("\"Debug file constraints\"")
            , Strategy("nabl2--debug-file-constraints")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug file scope graph\"")
            , Strategy("nabl2--debug-file-scope-graph")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug file name resolution\"")
            , Strategy("nabl2--debug-file-name-resolution")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug file unifier\"")
            , Strategy("nabl2--debug-file-unifier")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(String("\"Debug file symbolic constraints\""), Strategy("nabl2--debug-file-symbolic-constraints"), [Meta(), OpenEditor()])
          , Separator()
          , Action(
              String("\"Debug project constraints\"")
            , Strategy("nabl2--debug-project-constraints")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug project scope graph\"")
            , Strategy("nabl2--debug-project-scope-graph")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug project name resolution\"")
            , Strategy("nabl2--debug-project-name-resolution")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(
              String("\"Debug project unifier\"")
            , Strategy("nabl2--debug-project-unifier")
            , [Meta(), RealTime(), OpenEditor()]
            )
          , Action(String("\"Debug project symbolic constraints\""), Strategy("nabl2--debug-project-symbolic-constraints"), [Meta(), OpenEditor()])
          ]
        )
      ]
    )
  , References(
      ""
    , [ReferenceRule("_", Strategy("nabl2--editor-resolve")), HoverRule("_", Strategy("nabl2--editor-hover"))]
    )
  ]
)