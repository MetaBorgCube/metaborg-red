module test

language Smalltalk


test createObject [[
	$E$ 
	Object subclass: #newObject
]] parse succeeds

test createSubClass [[
	$E$ 
	newObject subclass: #subObject
]] parse succeeds

test methodDeclaration [[
	$M$ 
	A class>>keyword1: a keyword2: b
]] parse succeeds

test methodDeclarationSTMTSOnly [[
	$M$ 
	A class>>keyword1: a keyword2: b
	a + b.
	1 + 3.
]] parse succeeds

test methodDeclaration [[
	$M$ 
	keyword1: a keyword2: b
	a + b.
	1 + 3.
	|a b c|
]] parse fails

test methodDeclaration [[
	$M$ 
	keyword1: a keyword2: b
	|a b c|.
	a + b.
	1 + 3.
]] parse fails

test methodDeclaration [[
	$M$ 
	A class>>keyword1: a keyword2: b
	|a b c|
	a + b.
	1 + 3.
]] parse succeeds

test unaryDeclaration [[
	$M$ 
	Object class>> unarymessage ^true
]] parse succeeds