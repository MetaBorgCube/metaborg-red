module ds-signatures/Smalltalk-sig

imports ds-signatures/Base-sig

signature
    sorts
      Start
      Reference
      ConstantReference
      PsuedoVariableReference
      BindableIdentifier
      UnaryMessageSelector
      Keyword
      KeywordMessageSelector
      BinaryMessageSelector
      SymbolInArrayLiteral
      SymbolLiteral
      ArrayLiteral
      ObjectArrayLiteral
      NestedObjectArrayLiteral
      LiteralArrayElement
      ByteArrayLiteral
      FormalBlockArgumentDeclaration
      FormalBlockArgumentDeclarationList
      FormalBlockArgumentDeclarationListWithSep
      BlockLiteral
      Literal
      NestedExpression
      Operand
      UnaryMessage
      UnaryMessageChain
      BinaryMessageOperand
      BinaryMessage
      BinaryMessageChain
      KeywordMessageArgument
      KeywordMessageSegment
      KeywordMessage
      MessageChain
      CascadedMessage
      Expression
      ExpressionRest
      AssignmentOperation
      Statement
      MethodReturnOperator
      FinalStatement
      LocalVariableDeclarationList
      ExecutableCode
      ExecutableCodeRest
      DottedStatement
      Dot
      UnaryMethodHeader
      BinaryMethodHeader
      KeywordMethodHeaderSegment
      KeywordMethodHeader
      MethodHeader
      MethodDeclaration
    constructors
      MethodDeclaration : MethodDeclaration -> Start 
      ExecutableCode : ExecutableCode -> Start 
      Reference : Identifier -> Reference 
      Null : ConstantReference 
      False : ConstantReference 
      True : ConstantReference 
      Self : PsuedoVariableReference 
      Super : PsuedoVariableReference 
      This : PsuedoVariableReference 
      BindableIdentifier : Identifier -> BindableIdentifier 
      UnaryMessageSelector : Identifier -> UnaryMessageSelector 
      Keyword : Identifier -> Keyword 
      KeywordMessageSelector : List(Keyword) -> KeywordMessageSelector 
      BinaryMessageSelector : BinarySelectorChar * BinarySelectorChar -> BinaryMessageSelector 
      UnaryMessageSelector : UnaryMessageSelector -> SymbolInArrayLiteral 
      KeywordMessageSelector : KeywordMessageSelector -> SymbolInArrayLiteral 
      BinaryMessageSelector : BinaryMessageSelector -> SymbolInArrayLiteral 
      SymbolInArrayLiteral : SymbolInArrayLiteral -> SymbolLiteral 
      ConstantReference : ConstantReference -> SymbolLiteral 
      StringLiteral : StringLiteral -> SymbolLiteral 
      ObjectArrayLiteral : ObjectArrayLiteral -> ArrayLiteral 
      ByteArrayLiteral : ByteArrayLiteral -> ArrayLiteral 
      ObjectArrayLiteral : NestedObjectArrayLiteral -> ObjectArrayLiteral 
      NestedObjectArrayLiteral : List(LiteralArrayElement) -> NestedObjectArrayLiteral 
      Literal : Literal -> LiteralArrayElement 
      NestedObjectArrayLiteral : NestedObjectArrayLiteral -> LiteralArrayElement 
      SymbolInArrayLiteral : SymbolInArrayLiteral -> LiteralArrayElement 
      ConstantReference : ConstantReference -> LiteralArrayElement 
      ByteArrayLiteral : List(UnsignedIntegerLiteral) -> ByteArrayLiteral 
      FormalBlockArgumentDeclaration : BindableIdentifier -> FormalBlockArgumentDeclaration 
      FormalBlockArgumentDeclarationList : List(FormalBlockArgumentDeclaration) -> FormalBlockArgumentDeclarationList 
      BlockLiteral : FormalBlockArgumentDeclarationListWithSep * ExecutableCode -> BlockLiteral 
      ConstantReference : ConstantReference -> Literal 
      IntegerLiteral : IntegerLiteral -> Literal 
      ScaledDecimalLiteral : ScaledDecimalLiteral -> Literal 
      FloatingPointLiteral : FloatingPointLiteral -> Literal 
      CharacterLiteral : CharacterLiteral -> Literal 
      StringLiteral : StringLiteral -> Literal 
      SymbolLiteral : SymbolLiteral -> Literal 
      ArrayLiteral : ArrayLiteral -> Literal 
      BlockLiteral : BlockLiteral -> Literal 
      NestedExpression : Statement -> NestedExpression 
      Literal : Literal -> Operand 
      Reference : Reference -> Operand 
      NestedExpression : NestedExpression -> Operand 
      UnaryMessage : UnaryMessageSelector -> UnaryMessage 
      UnaryMessageChain : List(UnaryMessage) -> UnaryMessageChain 
      BinaryMessageOperand : Operand * UnaryMessageChain -> BinaryMessageOperand 
      BinaryMessage : BinaryMessageSelector * BinaryMessageOperand -> BinaryMessage 
      BinaryMessageChain : List(BinaryMessage) -> BinaryMessageChain 
      KeywordMessageArgument : BinaryMessageOperand * BinaryMessageChain -> KeywordMessageArgument 
      KeywordMessageSegment : Keyword * KeywordMessageArgument -> KeywordMessageSegment 
      KeywordMessage : KeywordMessageSegment * List(KeywordMessageSegment) -> KeywordMessage 
      KeywordMessage : KeywordMessage -> MessageChain 
      BinaryMessage : BinaryMessage * BinaryMessageChain * KeywordMessage -> MessageChain 
      UnaryMessage : UnaryMessage * UnaryMessageChain * BinaryMessageChain * KeywordMessage -> MessageChain 
      CascadedMessage : MessageChain -> CascadedMessage 
      Expression : Operand * ExpressionRest -> Expression 
      ExpressionRest : MessageChain * List(CascadedMessage) -> ExpressionRest 
      AssignmentOperation : BindableIdentifier -> AssignmentOperation 
      Statement : List(AssignmentOperation) * Expression -> Statement 
      MethodReturnOperator : MethodReturnOperator 
      FinalStatement : MethodReturnOperator * Statement -> FinalStatement 
      LocalVariableDeclarationList : List(BindableIdentifier) -> LocalVariableDeclarationList 
      ExecutableCode : LocalVariableDeclarationList * ExecutableCodeRest -> ExecutableCode 
      ExecutableCodeRest : List(DottedStatement) * FinalStatement * Dot -> ExecutableCodeRest 
      DottedStatement : Statement -> DottedStatement 
      Dot : Dot 
      UnaryMethodHeader : UnaryMessageSelector -> UnaryMethodHeader 
      BinaryMethodHeader : BinaryMessageSelector * BindableIdentifier -> BinaryMethodHeader 
      KeywordMethodHeaderSegment : Keyword * BindableIdentifier -> KeywordMethodHeaderSegment 
      KeywordMethodHeader : List(KeywordMethodHeaderSegment) -> KeywordMethodHeader 
      UnaryMethodHeader : UnaryMethodHeader -> MethodHeader 
      BinaryMethodHeader : BinaryMethodHeader -> MethodHeader 
      KeywordMethodHeader : KeywordMethodHeader -> MethodHeader 
      MethodDeclaration : MethodHeader * ExecutableCode -> MethodDeclaration 