module Base
exports
  lexical syntax
    ~[]                                                                                            -> Character              
    [\ \t\n\r]                                                                                     -> WhitespaceCharacter    
    [0-9]                                                                                          -> DecimalDigit           
    [a-zA-Z]                                                                                       -> Letter                 
    ~[\"]                                                                                          -> CommentCharacter       
    [\\\"]                                                                                         -> CommentCharacter       
    "\"" CommentCharacter* "\""                                                                    -> Comment                
    ( WhitespaceCharacter | Comment )+                                                             -> Whitespace             
    WhitespaceCharacter                                                                            -> LAYOUT                 
    Comment                                                                                        -> LAYOUT                 
    DecimalDigit | Letter                                                                          -> LetterOrDigit          
    Letter | "_" ( DecimalDigit | Letter | "_" )+                                                  -> Identifier             
    "~" | "!" | "@" | "%" | "&" | "*" | "-" | "+" | "=" | "|" | "\\" | "<" | ">" | "," | "?" | "/" -> BinarySelectorChar     
    "-"? UnsignedIntegerLiteral                                                                    -> IntegerLiteral         
    DecimalIntegerLiteral | ( Radix "r" BaseNIntegerLiteral )                                      -> UnsignedIntegerLiteral 
    DecimalDigit+                                                                                  -> DecimalIntegerLiteral  
    DecimalIntegerLiteral                                                                          -> Radix                  
    LetterOrDigit+                                                                                 -> BaseNIntegerLiteral    
    "-"? DecimalIntegerLiteral ( "." DecimalIntegerLiteral )? "s" DecimalIntegerLiteral?           -> ScaledDecimalLiteral   
    "-"? DecimalIntegerLiteral ( "." DecimalIntegerLiteral Exponent? ) | Exponent                  -> FloatingPointLiteral   
    "e" | "d" | "q" ( "-"? DecimalIntegerLiteral )?                                                -> Exponent               
    "$" Character                                                                                  -> CharacterLiteral       
    "'" ( StringLiteralCharacter | "''" )* "'"                                                     -> StringLiteral          
    ~[\']                                                                                          -> StringLiteralCharacter 

  lexical restrictions
    CommentCharacter -/- [\"]
    DecimalDigit -/- [0-9]
    Identifier -/- [a-zA-Z0-9\_]

  context-free restrictions
    LAYOUT? -/- [\ \t\n\r]
    LAYOUT? -/- [\"]