module trans/dynamics/Smalltalk

imports 
src-gen/ds-signatures/Smalltalk-sig
src-gen/ds-signatures/Base-sig
trans/runtime/values
trans/runtime/store

trans/dynamics/Statements

signature
  constructors
//    NumV: Int -> V
//    BoolV: Bool -> V
//	IntIntO: String -> O
//    ExpRest: BinaryMessageSelector * V -> Ex
//    ExpI: V * List(BinaryMessage) -> V
  arrows
    Prog -init-> V
    ExecutableCode --> V
    ExecutableCodeRest --> V
    
    Reference --> V
    
  	Expression --> V
  	
  	Literal --> V
  	Reference --> V
  	Operand --> V
//  	MessageChain -->  List(BinaryMessage)
  	BinaryMessageOperand --> V
  	Statement --> V
  	ConstantReference --> V
//  	ExecutableCodeRest --> V
//  	V --> V

  native operators
//    parseI: String -> Int
//    binOpII: Int * Int * String -> Int
//    binOpIB: Int * Int * String -> Bool
//    binOpBB: Bool * Bool * String -> Bool
//    printStr: String -> Int
    
rules      
	
	Program(ExecutableCode(rest)) -init-> v
		where
		rest :: S {}, H {} --> v :: S _, H _.

	ExecutableCodeRest(statements, finalstmt) --> v
		where
			StatementExecutor(DotRemover(statements)) --> _;
			finalstmt --> v.
			
			
//	KeywordMessageChain(chain) --> [].